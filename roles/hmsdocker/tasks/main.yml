---
- name: Ensure paths exists locally.
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ hms_docker_data_path }}"
    - "{{ hms_docker_apps_path }}"
    - "{{ hms_docker_mount_path }}"
    - "{{ hms_docker_media_path }}"
  when: item is defined and item != ''

- name: NAS base configuration tasks.
  include_tasks: "nas_{{ hms_docker_media_share_type | lower }}.yml"

- name: Ensure additional NAS configuration
  include_tasks: "nas_additional_{{ item.type | lower }}.yml"
  with_items: "{{ nas_client_remote_additional_paths }}"
  when:
    - nas_client_remote_additional_paths is defined
    - nas_client_use_additional_paths is defined and nas_client_use_additional_paths
  no_log: yes

- name: Ensure library folders.
  ansible.builtin.file:
    path: "{{ hms_docker_media_path }}/{{ item.folder_name }}"
    state: directory
  with_items: "{{ hms_docker_library_folders }}"

- name: Ensure container config directories exist.
  ansible.builtin.file:
    path: "{{ hms_docker_apps_path }}/{{ item.key }}/config"
    state: directory
  with_dict: "{{ hms_docker_container_map }}"
  when: item.value.directory and (item.value.enabled is defined and item.value.enabled)

- name: Ensure Traefik
  import_tasks: "traefik.yml"
  when: container_enabled_traefik

- name: Ensure homepage
  ansible.builtin.import_tasks: "homepage.yml"
  when: container_enabled_homepage

- name: Ensure env
  ansible.builtin.template:
    src: env.j2
    dest: "{{ hms_docker_data_path }}/.env"
    mode: "{{ secrets_env_mode }}"
    owner: "{{ secrets_env_user }}"
    group: "{{ secrets_env_group }}"
    backup: yes
    lstrip_blocks: yes
    trim_blocks: yes
  no_log: true
  register: compose_env
  vars:
  - watchtower_key: "{{ (slurped_watchtower_key_data['content'] | b64decode) if slurped_watchtower_key_data['content'] is defined else '### Will be obtained during full run ###' }}"

- name: Ensure docker-compose.yml file.
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ hms_docker_data_path }}/docker-compose.yml"
    group: docker
    mode: 0644
    backup: yes
    lstrip_blocks: yes
    trim_blocks: yes

- name: Ensure containers defined in compose file.
  community.docker.docker_compose:
    project_src: "{{ hms_docker_data_path }}"
    project_name: "{{ project_name }}"
    pull: "{{ container_pull_images_first }}"
    state: "{{ hms_docker_compose_container_state }}"
    remove_orphans: "{{ container_remove_orphans }}"
    # env_file: "{{ compose_env.dest }}" # Commented out since this module defaults to using the .env file within the project_src location, but leaving just in case advanced users wish to point to a different location
  when: not ansible_check_mode
