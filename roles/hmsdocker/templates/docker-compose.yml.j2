version: '3'
services:
{% if container_enabled_portainer %}
  # Portainer container, webgui for docker
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    restart: ${RESTART_POLICY}
    logging:
      driver: json-file
      options:
        max-size: 10m
    networks:
      - "traefik_net"
    {% if expose_ports_enabled_portainer %}
    ports:
      - 9000:9000
    {% endif %}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${HMSD_APPS_PATH}/portainer/config:/data
    {% if traefik_enabled_portainer or container_enabled_homepage %}
    labels:
      {% if traefik_enabled_portainer %}
      - traefik.enable=true
      - traefik.http.services.portainer-${COMPOSE_PROJECT}.loadbalancer.server.port=9000
      - traefik.http.routers.portainer-${COMPOSE_PROJECT}.rule=Host(`{{ hms_docker_container_map['portainer']['proxy_host_rule'] }}.{{ hms_docker_domain }}`)
        {% if not expose_public_enabled_portainer %}
      - traefik.http.routers.portainer-${COMPOSE_PROJECT}.middlewares=internal-ipwhitelist
        {% endif %}
      {% endif %}
      {% if container_enabled_homepage and homepage_enabled_portainer %}
      - homepage.group=Infrastructure
      - homepage.name=Portainer
      - homepage.icon=portainer.png
      - homepage.href=http://{{ hms_docker_container_map['portainer']['proxy_host_rule'] }}.{{ hms_docker_domain }}
      - homepage.description=Container Management
      - homepage.widget.type=portainer
      - homepage.widget.url=https://portainer:9443
      - homepage.widget.env=1
      - homepage.widget.key=${PORTAINER_KEY:-apikeyapikeyapikey}
      {% if homepage_stats_enabled_portainer %}
      - homepage.showStats=true
      {% endif %}
      {% endif %}
    {% endif %}
{% endif %}

{% if container_enabled_homepage %}
  # homepage container, dashboarding
  homepage:
    image: ghcr.io/benphelps/homepage:latest
    container_name: homepage
    restart: ${RESTART_POLICY}
    logging:
      driver: json-file
      options:
        max-size: 10m
    networks:
      - "traefik_net"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${HMSD_APPS_PATH}/homepage/config:/app/config
    environment:
      - TZ=${TIMEZONE}
    {% if expose_ports_enabled_homepage %}
    ports:
      - 3000:3000
    {% endif %}
    {% if traefik_enabled_homepage %}
    labels:
      - traefik.enable=true
      - traefik.http.services.homepage-${COMPOSE_PROJECT}.loadbalancer.server.port=3000
      - traefik.http.routers.homepage-${COMPOSE_PROJECT}.rule=Host(`{{ hms_docker_container_map['homepage']['proxy_host_rule'] }}.{{ hms_docker_domain }}`)
        {% if not expose_public_enabled_homepage %}
      - traefik.http.routers.homepage-${COMPOSE_PROJECT}.middlewares=internal-ipwhitelist
        {% endif %}
    {% endif %}
{% endif %}

{% if container_enable_auto_updates %}
  # Watchtower container, automatic updates
  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: ${RESTART_POLICY}
    logging:
      driver: json-file
      options:
        max-size: 10m
    networks:
      - "traefik_net"
    command: --cleanup --schedule "{{ container_auto_update_schedule }}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    {% if container_enabled_homepage %}
    environment:
      - WATCHTOWER_HTTP_API_TOKEN=${WATCHTOWER_KEY}
      - WATCHTOWER_HTTP_API_METRICS=true
    labels:
      - homepage.group=Infrastructure
      - homepage.name=Watchtower
      - homepage.icon=watchtower.png
      - homepage.description=Container Updates
      - homepage.widget.type=watchtower
      - homepage.widget.url=http://watchtower:8080
      - homepage.widget.key=${WATCHTOWER_KEY:-apikeyapikeyapikey}
    {% endif %}
{% endif %}

{% if container_enabled_traefik %}
  # Traefik container, loadbalancer/reverse proxy/ssl
  traefik:
    image: traefik:${TRAEFIK_TAG}
    container_name: traefik
    restart: ${RESTART_POLICY}
    logging:
      driver: json-file
      options:
        max-size: 10m
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    environment:
      - TZ=${TIMEZONE}
      - PUID=${PUID}
      - PGID=${PGID}
    {% if traefik_ssl_dns_provider_environment_vars %}
        {% for key, value in traefik_ssl_dns_provider_environment_vars.items() %}
        {# Due to how Ansible interprets curly brackets, I had to use 'raw' statements in order to render the ${} around the ansible 'key' variable to reference the .env file variable #}
      - {{ key }}={% raw %}${{% endraw %}{{ key }}{% raw %}}{% endraw +%}
        {% endfor %}
    {% endif %}
    networks:
      - "traefik_net"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${HMSD_APPS_PATH}/traefik/config/traefik.yml:/etc/traefik/traefik.yml
      - ${HMSD_APPS_PATH}/traefik/config/certs/:/certs/
    {% if traefik_enabled_traefik or container_enabled_homepage %}
    labels:
      {% if traefik_enabled_traefik %}
      - traefik.enable=true
      - traefik.http.routers.traefik-${COMPOSE_PROJECT}.rule=Host(`{{ hms_docker_container_map['traefik']['proxy_host_rule'] }}.{{ hms_docker_domain }}`)
      - traefik.http.services.traefik-${COMPOSE_PROJECT}.loadbalancer.server.port=8080
      - "traefik.http.middlewares.internal-ipwhitelist.ipwhitelist.sourcerange=127.0.0.1/32, {{ traefik_subnet_allow_list }}"
      - "traefik.http.middlewares.external-ipwhitelist.ipwhitelist.sourcerange=0.0.0.0/0"
      - "traefik.http.routers.traefik-${COMPOSE_PROJECT}.middlewares=internal-ipwhitelist"
      {% endif %}
      {% if container_enabled_homepage and homepage_enabled_traefik %}
      - homepage.group=Infrastructure
      - homepage.name=Traefik
      - homepage.icon=traefik.png
      - homepage.href=http://{{ hms_docker_container_map['traefik']['proxy_host_rule'] }}.{{ hms_docker_domain }}
      - homepage.description=Reverse Proxy
      - homepage.widget.type=traefik
      - homepage.widget.url=http://traefik:8080
      {% if homepage_stats_enabled_traefik %}
      - homepage.showStats=true
      {% endif %}
      {% endif %}
    {% endif %}
{% endif %}

{% if container_enabled_prowlarr %}
  # Prowlarr container, torrent indexer
  prowlarr:
    image: linuxserver/prowlarr:develop
    container_name: prowlarr
    restart: ${RESTART_POLICY}
    logging:
      driver: json-file
      options:
        max-size: 10m
    networks:
      - "download_net"
      - "traefik_net"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${HMSD_APPS_PATH}/prowlarr/config:/config
    {% if expose_ports_enabled_prowlarr %}
    ports:
      - 9696:9696
    {% endif %}
    {% if traefik_enabled_prowlarr or container_enabled_homepage %}
    labels:
      {% if traefik_enabled_prowlarr %}
      - traefik.enable=true
      - traefik.http.services.prowlarr-${COMPOSE_PROJECT}.loadbalancer.server.port=9696
      - traefik.http.routers.prowlarr-${COMPOSE_PROJECT}.rule=Host(`{{ hms_docker_container_map['prowlarr']['proxy_host_rule'] }}.{{ hms_docker_domain }}`)
        {% if not expose_public_enabled_prowlarr %}
      - "traefik.http.routers.prowlarr-${COMPOSE_PROJECT}.middlewares=internal-ipwhitelist"
        {% endif %}
      {% endif %}
      {% if container_enabled_homepage and homepage_enabled_prowlarr %}
      - homepage.group=Managers
      - homepage.name=Prowlarr
      - homepage.icon=prowlarr.png
      - homepage.href=http://{{ hms_docker_container_map['prowlarr']['proxy_host_rule'] }}.{{ hms_docker_domain }}
      - homepage.description=Indexer Management
      - homepage.widget.type=prowlarr
      - homepage.widget.url=http://prowlarr:9696
      - homepage.widget.key=${PROWLARR_KEY:-apikeyapikeyapikey}
      {% if homepage_stats_enabled_prowlarr %}
      - homepage.showStats=true
      {% endif %}
      {% endif %}
    {% endif %}
{% endif %}

{% if container_enabled_sonarr %}
  # Sonarr container, tv show indexer
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    restart: ${RESTART_POLICY}
    logging:
      driver: json-file
      options:
        max-size: 10m
    networks:
      - "download_net"
      - "traefik_net"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    {% if traefik_enabled_sonarr or container_enabled_homepage %}
    labels:
      {% if traefik_enabled_sonarr %}
      - traefik.enable=true
      - traefik.http.services.sonarr-${COMPOSE_PROJECT}.loadbalancer.server.port=8989
      - traefik.http.routers.sonarr-${COMPOSE_PROJECT}.rule=Host(`{{ hms_docker_container_map['sonarr']['proxy_host_rule'] }}.{{ hms_docker_domain }}`)
        {% if not expose_public_enabled_sonarr %}
      - "traefik.http.routers.sonarr-${COMPOSE_PROJECT}.middlewares=internal-ipwhitelist"
        {% endif %}
      {% endif %}
      {% if container_enabled_homepage and homepage_enabled_sonarr %}
      - homepage.group=Managers
      - homepage.name=Sonarr
      - homepage.icon=sonarr.png
      - homepage.href=http://{{ hms_docker_container_map['sonarr']['proxy_host_rule'] }}.{{ hms_docker_domain }}
      - homepage.description=TV Show Manager
      - homepage.widget.type=sonarr
      - homepage.widget.url=http://sonarr:8989
      - homepage.widget.key=${SONARR_KEY:-apikeyapikeyapikey}
      {% if homepage_stats_enabled_sonarr %}
      - homepage.showStats=true
      {% endif %}
      {% endif %}
    {% endif %}
    volumes:
      - ${HMSD_APPS_PATH}/sonarr/config:/config
      - {{ hms_docker_media_path }}:/data/media
    {% if nas_enable_additional_paths %}
        {% for path in nas_client_remote_additional_paths %}
      - {{ path.local_mount_path }}/{{ hms_docker_library_folder_name }}:/data/media_additional/{{ path.name | map('regex_replace', regex, replace) | list | join }}
        {% endfor %}
    {% endif %}
    {% if expose_ports_enabled_sonarr %}
    ports:
      - 8989:8989
    {% endif %}
{% endif %}

{% if container_enabled_radarr %}
  # Radarr container, movie indexer
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    restart: ${RESTART_POLICY}
    logging:
      driver: json-file
      options:
        max-size: 10m
    networks:
      - "download_net"
      - "traefik_net"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    {% if traefik_enabled_radarr or container_enabled_homepage %}
    labels:
      {% if traefik_enabled_radarr %}
      - traefik.enable=true
      - traefik.http.services.radarr-${COMPOSE_PROJECT}.loadbalancer.server.port=7878
      - traefik.http.routers.radarr-${COMPOSE_PROJECT}.rule=Host(`{{ hms_docker_container_map['radarr']['proxy_host_rule'] }}.{{ hms_docker_domain }}`)
        {% if not expose_public_enabled_radarr %}
      - "traefik.http.routers.radarr-${COMPOSE_PROJECT}.middlewares=internal-ipwhitelist"
        {% endif %}
      {% endif %}
      {% if container_enabled_homepage and homepage_enabled_radarr %}
      - homepage.group=Managers
      - homepage.name=Radarr
      - homepage.icon=radarr.png
      - homepage.href=http://{{ hms_docker_container_map['radarr']['proxy_host_rule'] }}.{{ hms_docker_domain }}
      - homepage.description=Movie Manager
      - homepage.widget.type=radarr
      - homepage.widget.url=http://radarr:7878
      - homepage.widget.key=${RADARR_KEY:-apikeyapikeyapikey}
      {% if homepage_stats_enabled_radarr %}
      - homepage.showStats=true
      {% endif %}
      {% endif %}
    {% endif %}
    volumes:
      - ${HMSD_APPS_PATH}/radarr/config:/config
      - {{ hms_docker_media_path }}:/data/media
    {% if nas_enable_additional_paths %}
        {% for path in nas_client_remote_additional_paths %}
      - {{ path.local_mount_path }}/{{ hms_docker_library_folder_name }}:/data/media_additional/{{ path.name | map('regex_replace', regex, replace) | list | join }}
        {% endfor %}
    {% endif %}
    {% if expose_ports_enabled_radarr %}
    ports:
      - 7878:7878
    {% endif %}
{% endif %}

{% if container_enabled_flaresolverr %}
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    restart: '${RESTART_POLICY}'
    logging:
      driver: json-file
      options:
        max-size: 10m
    networks:
      - "download_net"
    environment:
      - LOG_LEVEL=info
      - LOG_HTML=false
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=${TIMEZONE}
    {% if expose_ports_enabled_flaresolverr %}
    ports:
      - 8191:8191
    {% endif %}
{% endif %}

networks:
  "download_net":
    driver: bridge
    attachable: false
  "media_net":
    driver: bridge
    attachable: false
  "traefik_net":
    driver: bridge
    attachable: true
